const { execSync } = require('child_process');
const os = require('os');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è IP –∞–¥—Ä–µ—Å–∞
function getLocalIP() {
  const interfaces = os.networkInterfaces();
  
  for (const name of Object.keys(interfaces)) {
    for (const interface of interfaces[name]) {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º IPv6 –∏ loopback
      if (interface.family === 'IPv4' && !interface.internal) {
        return interface.address;
      }
    }
  }
  
  return 'localhost';
}

const localIP = getLocalIP();

console.log(`üöÄ Starting Smarto development server...`);
console.log(`üì± Local IP: ${localIP}`);
console.log(`üåê Network access: http://${localIP}:3000`);
console.log(`üîó Local access: http://localhost:3000`);
console.log('');

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏
process.env.NEXT_PUBLIC_SITE_URL = `http://${localIP}:3000`;
process.env.NEXT_PUBLIC_API_URL = `http://${localIP}:3000`;

// –ó–∞–ø—É—Å–∫–∞–µ–º Next.js —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
const command = `next dev -H 0.0.0.0 -p 3000`;

try {
  execSync(command, { 
    stdio: 'inherit',
    cwd: process.cwd(),
    env: {
      ...process.env,
      NEXT_PUBLIC_SITE_URL: `http://${localIP}:3000`,
      NEXT_PUBLIC_API_URL: `http://${localIP}:3000`
    }
  });
} catch (error) {
  console.error('‚ùå Error starting development server:', error.message);
  process.exit(1);
} 